@using ACME.Helper;
@model ACME.Models.EncuestaDto;

@{
    Layout = "_Layout";
    string valido = "";
}

<div class="card">
    <div class="card-body" style="margin-top: 2px">
        <div class="ml-2 align-self-center">
            @if(Model.tipoManto == Constants.Agregar)
            {
                <h3 class="text-themecolor mb-0">Creación de encuesta</h3>
            }
            else
            {
                @if (Model.tipoManto == Constants.Modificar)
                {
                    <h3 class="text-themecolor mb-0">Modificación de encuesta</h3>
                }
                else
                {
                    <h3 class="text-themecolor mb-0">Eliminación de encuesta</h3>
                }
            }
        </div>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-2">
		        <li class="breadcrumb-item"><a href="~/Home/Index">Home</a></li>
                <li class="breadcrumb-item"><a href="~/Encuesta/IndexEncuesta">Encuesta</a></li>
                <li class="breadcrumb-item active">@Constants.MantoBoton(Model.tipoManto)</li>
            </ol>
        </nav>
    </div>
</div>
<br/>

<div class="container-fluid">
    <div class="card" style="border:solid;top:-15px;border-color:#1e88e5;">
        <div class="card-body">

            <form asp-action="GrabarEncuesta">
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.tipoManto)
                @Html.HiddenFor(model => model.Link)

                <div class="tab-content border" style="margin-top:-7px">
                    <div class="tab-pane active" id="General" style="margin-top:15px;">
                        <div class="form-group">
                            <label class="col-md-2 control-label">Nombre</label>
                            <div class="col-md-12">
                                @if (!ViewData.ModelState.IsValid)
                                {
                                    if (ViewData.ModelState["Nombre"].ValidationState.ToString() == "Invalid")
                                        valido = "is-invalid";
                                }

                                @if (Model.tipoManto != Constants.Eliminar)
                                {
                                    <input asp-for="Nombre" class="form-control @valido" />
                                }
                                else
                                {
                                    <input asp-for="Nombre" class="form-control @valido" readonly />
                                }
                                <span asp-validation-for="Nombre" class="invalid-feedback"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-2 control-label">Descripcion</label>
                            <div class="col-md-12">
                                @if (!ViewData.ModelState.IsValid)
                                {
                                    if (ViewData.ModelState["Descripcion"].ValidationState.ToString() == "Invalid")
                                        valido = "is-invalid";
                                }

                                @if (Model.tipoManto != Constants.Eliminar)
                                {
                                    <input asp-for="Descripcion" class="form-control @valido" />
                                }
                                else
                                {
                                    <input asp-for="Descripcion" class="form-control @valido" readonly />
                                }
                                <span asp-validation-for="Descripcion" class="invalid-feedback"></span>
                            </div>
                        </div>

                        <button type="submit" class="btn btn-primary" style="margin-left:15px;margin-bottom:5px;" name="button" value="Grabar">@Constants.MantoBoton(Model.tipoManto)</button>
                        <button type="submit" class="btn btn-primary" name="button" value="Salir" style="margin-bottom:5px;">Salir</button>
                    </div>
                </div>
            </form>
        </div>
        
        @if (!ViewData.ModelState.IsValid)
        {
            @if (ViewData.ModelState.ContainsKey("Error"))
			{
				<br />
				var error = ViewData.ModelState["Error"].Errors;
				<div class="alert alert-danger alert-dismissible fade show" role="alert" style="margin-bottom:-0px;">
					@foreach(var mensaje in error)
					{
						@Html.DisplayFor(x => mensaje.ErrorMessage)<br />
					}
				</div>
			}
        }
        else
        {
            <div class="card-footer text-danger div-show" style="padding:19px;background-color:#1e88e5;" id="PanelFooter" name="PanelFooter">
                <div class="d-flex no-block text-white">
                    @if(Model.tipoManto == Constants.Agregar)
                     {
                        @Constants.MensajeAgregar;
                    }
                    else
                    {
                        @if(Model.tipoManto == Constants.Modificar)
                        {
                            @Constants.MensajeEditar;
                        }
                        else
                        {
                            @Constants.MensajeEliminar;
                        }
                    }
                </div>
            </div>
        }
    </div>
</div>